{
  "openrpc": "1.2.4",
  "info": {
    "title": "Lifecycle",
    "description": "Methods and events for responding to lifecycle changes in your app",
    "version": "0.0.0"
  },
  "methods": [
    {
      "name": "ready",
      "tags": [
        {
          "name": "calls-metrics"
        },
        {
          "name": "capabilities",
          "x-uses": ["xrn:firebolt:capability:lifecycle:ready"]
        },
        {
          "name": "exclude-from-sdk"
        }
      ],
      "summary": "Notify the platform that the app is ready",
      "params": [],
      "result": {
        "name": "result",
        "schema": {
          "const": null
        }
      },
      "examples": [
        {
          "name": "Let the platform know that your app is ready",
          "params": [],
          "result": {
            "name": "Default Result",
            "value": null
          }
        }
      ]
    },
    {
      "name": "close",
      "tags": [
        {
          "name": "capabilities",
          "x-uses": ["xrn:firebolt:capability:lifecycle:state"]
        }
      ],
      "summary": "Request that the platform move your app out of focus",
      "params": [
        {
          "name": "reason",
          "summary": "The reason the app is requesting to be closed",
          "required": true,
          "schema": {
            "$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/CloseReason"
          }
        }
      ],
      "result": {
        "name": "success",
        "schema": {
          "const": null
        }
      },
      "examples": [
        {
          "name": "Close the app when the user presses back on the app home screen",
          "params": [
            {
              "name": "reason",
              "value": "remoteButton"
            }
          ],
          "result": {
            "name": "Default Result",
            "value": null
          }
        },
        {
          "name": "Close the app when the user selects an exit menu item",
          "params": [
            {
              "name": "reason",
              "value": "userExit"
            }
          ],
          "result": {
            "name": "Default Result",
            "value": null
          }
        }
      ]
    },
    {
			"name": "onStart",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.start"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the start event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "paused",
							"previous": "initializing"
						}
					}
				}
			]
		},
		{
			"name": "onStartSuspended",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.startSuspended"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the suspended start event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "suspended",
							"previous": "initializing"
						}
					}
				}
			]
		},
		{
			"name": "onPause",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.pause"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the pause event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "paused",
							"previous": "active"
						}
					}
				}
			]
		},
		{
			"name": "onActivate",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.activate"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the activate event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "active",
							"previous": "paused"
						}
					}
				},
				{
					"name": "Move to active via remote branded button",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "value",
						"value": {
							"state": "active",
							"previous": "paused",
							"source": "remote"
						}
					}
				}
			]
		},
		{
			"name": "onSuspend",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.suspend"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the suspended event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "suspended",
							"previous": "paused"
						}
					}
				}
			]
		},
		{
			"name": "onResume",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.resume"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the suspended event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "paused",
							"previous": "suspended"
						}
					}
				}
			]
		},
		{
			"name": "onHibernate",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.hibernate"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the hibernating event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "hibernated",
							"previous": "suspended"
						}
					}
				}
			]
		},
		{
			"name": "onRestore",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.restore"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the restoration event",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/LifecycleEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"state": "suspended",
							"previous": "hibernated"
						}
					}
				}
			]
		},
		{
			"name": "onDestroy",
			"tags": [
				{
					"name": "event",
          "x-notifier": "Lifecycle.destroy"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the destroy event \n\nHowever, this event is unreliable and app may not get this notification in the event of platform needs to kill the app quickly",
			"params": [
        {
          "name": "listen",
          "required": true,
          "schema": {
              "type": "boolean"
          }
        }
      ],
			"result": {
				"name": "value",
				"schema": {
					"$ref": "#/components/schemas/DestroyEvent"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
            {
              "name": "listen",
              "value": true
            }
          ],
					"result": {
						"name": "Default Result",
						"value": {
							"reason": "userExit",
							"previous": "paused"
						}
					}
				}
			]
		}
  ],
  "components": {
    "schemas": {
      "LifecycleEvent": {
        "title": "LifecycleEvent",
        "description": "A an object describing the previous and current states",
        "type": "object",
        "required": ["state", "previous"],
        "properties": {
          "state": {
            "$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState",
            "description": "The current lifcycle state"
          },
          "previous": {
            "$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState",
            "description": "The previous lifcycle state"
          },
          "source": {
            "type": "string",
            "enum": ["voice", "remote"],
            "description": "The source of the lifecycle change."
          }
        }
      },
			"DestroyEvent": {
				"title": "DestroyEvent",
				"description": "An object describing state of destroy with reason, and previous state",
				"type": "object",
				"required": [
					"reason",
					"previous"
				],
				"properties": {
					"previous": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState",
						"description": "The previous lifecycle state"
					},
					"source": {
						"type": "string",
						"enum": [
							"voice",
							"remote"
						],
						"description": "The source of the lifecycle change."
					},
					"reason": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/DestroyReason",
						"description": "The reason the app is being destroyed"
					}
				}
			}
    }
  }
}
