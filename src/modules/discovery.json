{
  "openrpc": "1.2.4",
  "info": {
    "title": "Discovery",
    "version": "0.0.0",
    "description": "Your App likely wants to integrate with the Platform's discovery capabilities. For example to add a \"Watch Next\" tile that links to your app from the platform's home screen.\n\nGetting access to this information requires to connect to lower level APIs made available by the platform. Since implementations differ between operators and platforms, the Firebolt SDK offers a Discovery module, that exposes a generic, agnostic interface to the developer.\n\nUnder the hood, an underlaying transport layer will then take care of calling the right APIs for the actual platform implementation that your App is running on.\n\nThe Discovery plugin is used to _send_ information to the Platform.\n\n### Localization\nApps should provide all user-facing strings in the device's language, as specified by the Firebolt `Localization.language` property.\n\nApps should provide prices in the same currency presented in the app. If multiple currencies are supported in the app, the app should provide prices in the user's current default currency."
  },
  "methods": [
    {
      "name": "policy",
      "summary": "get the discovery policy",
      "params": [],
      "tags": [
        {
          "name": "property:readonly"
        },
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:policy"
          ]
        }
      ],
      "result": {
        "name": "policy",
        "summary": "discovery policy opt-in/outs",
        "schema": {
          "$ref": "#/components/schemas/DiscoveryPolicy"
        }
      },
      "examples": [
        {
          "name": "Getting the discovery policy",
          "params": [],
          "result": {
            "name": "Default Result",
            "value": {
              "enableRecommendations": true,
              "shareWatchHistory": true,
              "rememberWatchedPrograms": true
            }
          }
        }
      ]
    },
    {
      "name": "entityInfo",
      "tags": [
        {
          "name": "polymorphic-pull"
        },
        {
          "name": "capabilities",
          "x-provides": "xrn:firebolt:capability:discovery:entity-info"
        }
      ],
      "summary": "Provide information about a program entity and its available watchable assets, such as entitlement status and price, via either a push or pull call flow.",
      "description": "Provide information about a program entity and its available watchable assets, such as entitlement status and price, via either a push or pull call flow. Includes information about the program entity and its relevant associated entities, such as extras, previews, and, in the case of TV series, seasons and episodes.\n\nSee the `EntityInfo` and `WayToWatch` data structures below for more information.\n\nThe app only needs to implement Pull support for `entityInfo` at this time.",
      "params": [
        {
          "name": "correlationId",
          "required": true,
          "schema": {
            "type": [ "string", "null" ]
          }
        },
        {
          "name": "result",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EntityInfoResult"
          },
          "summary": "The entityInfo data."
        }
      ],
      "result": {
        "name": "success",
        "summary": "True if the push operation is successful",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Send entity info for a movie to the platform.",
          "params": [
            {
              "name": "correlationId",
              "value": null
            },
            {
              "name": "result",
              "value": {
                "expires": "2025-01-01T00:00:00.000Z",
                "entity": {
                  "identifiers": {
                    "entityId": "345"
                  },
                  "entityType": "program",
                  "programType": "movie",
                  "title": "Cool Runnings",
                  "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                  "releaseDate": "1993-01-01T00:00:00.000Z",
                  "contentRatings": [
                    {
                      "scheme": "US-Movie",
                      "rating": "PG"
                    },
                    {
                      "scheme": "CA-Movie",
                      "rating": "G"
                    }
                  ],
                  "waysToWatch": [
                    {
                      "identifiers": {
                        "assetId": "123"
                      },
                      "expires": "2025-01-01T00:00:00.000Z",
                      "entitled": true,
                      "entitledExpires": "2025-01-01T00:00:00.000Z",
                      "offeringType": "buy",
                      "price": 2.99,
                      "videoQuality": ["UHD"],
                      "audioProfile": ["dolbyAtmos"],
                      "audioLanguages": ["en"],
                      "closedCaptions": ["en"],
                      "subtitles": ["es"],
                      "audioDescriptions": ["en"]
                    }
                  ]
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Send entity info for a movie with a trailer to the platform.",
          "params": [
            {
              "name": "correlationId",
              "value": null
            },
            {
              "name": "result",
              "value": {
                "expires": "2025-01-01T00:00:00.000Z",
                "entity": {
                  "identifiers": {
                    "entityId": "345"
                  },
                  "entityType": "program",
                  "programType": "movie",
                  "title": "Cool Runnings",
                  "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                  "releaseDate": "1993-01-01T00:00:00.000Z",
                  "contentRatings": [
                    {
                      "scheme": "US-Movie",
                      "rating": "PG"
                    },
                    {
                      "scheme": "CA-Movie",
                      "rating": "G"
                    }
                  ],
                  "waysToWatch": [
                    {
                      "identifiers": {
                        "assetId": "123"
                      },
                      "expires": "2025-01-01T00:00:00.000Z",
                      "entitled": true,
                      "entitledExpires": "2025-01-01T00:00:00.000Z",
                      "offeringType": "buy",
                      "price": 2.99,
                      "videoQuality": ["UHD"],
                      "audioProfile": ["dolbyAtmos"],
                      "audioLanguages": ["en"],
                      "closedCaptions": ["en"],
                      "subtitles": ["es"],
                      "audioDescriptions": ["en"]
                    }
                  ]
                },
                "related": [
                  {
                    "identifiers": {
                      "entityId": "345"
                    },
                    "entityType": "program",
                    "programType": "preview",
                    "title": "Cool Runnings Trailer",
                    "waysToWatch": [
                      {
                        "identifiers": {
                          "assetId": "123111",
                          "entityId": "345"
                        },
                        "entitled": true,
                        "videoQuality": ["HD"],
                        "audioProfile": ["dolbyAtmos"],
                        "audioLanguages": ["en"],
                        "closedCaptions": ["en"]
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Send entity info for a TV Series with seasons and episodes to the platform.",
          "params": [
            {
              "name": "correlationId",
              "value": null
            },
            {
              "name": "result",
              "value": {
                "expires": "2025-01-01T00:00:00.000Z",
                "entity": {
                  "identifiers": {
                    "entityId": "98765"
                  },
                  "entityType": "program",
                  "programType": "series",
                  "title": "Perfect Strangers",
                  "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                  "releaseDate": "1986-01-01T00:00:00.000Z",
                  "contentRatings": [
                    {
                      "scheme": "US-TV",
                      "rating": "TV-PG"
                    }
                  ]
                },
                "related": [
                  {
                    "identifiers": {
                      "entityId": "111",
                      "seriesId": "98765"
                    },
                    "entityType": "program",
                    "programType": "season",
                    "seasonNumber": 1,
                    "title": "Perfect Strangers Season 3",
                    "contentRatings": [
                      {
                        "scheme": "US-TV",
                        "rating": "TV-PG"
                      }
                    ],
                    "waysToWatch": [
                      {
                        "identifiers": {
                          "assetId": "556",
                          "entityId": "111",
                          "seriesId": "98765"
                        },
                        "entitled": true,
                        "offeringType": "free",
                        "videoQuality": ["SD"],
                        "audioProfile": ["stereo"],
                        "audioLanguages": ["en"],
                        "closedCaptions": ["en"]
                      }
                    ]
                  },
                  {
                    "identifiers": {
                      "entityId": "111",
                      "seriesId": "98765"
                    },
                    "entityType": "program",
                    "programType": "episode",
                    "seasonNumber": 1,
                    "episodeNumber": 1,
                    "title": "Knock Knock, Who's There?",
                    "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                    "releaseDate": "1986-03-25T00:00:00.000Z",
                    "contentRatings": [
                      {
                        "scheme": "US-TV",
                        "rating": "TV-PG"
                      }
                    ],
                    "waysToWatch": [
                      {
                        "identifiers": {
                          "assetId": "556",
                          "entityId": "111",
                          "seriesId": "98765"
                        },
                        "entitled": true,
                        "offeringType": "free",
                        "videoQuality": ["SD"],
                        "audioProfile": ["stereo"],
                        "audioLanguages": ["en"],
                        "closedCaptions": ["en"]
                      }
                    ]
                  },
                  {
                    "identifiers": {
                      "entityId": "112",
                      "seriesId": "98765"
                    },
                    "entityType": "program",
                    "programType": "episode",
                    "seasonNumber": 1,
                    "episodeNumber": 2,
                    "title": "Picture This",
                    "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                    "releaseDate": "1986-04-01T00:00:00.000Z",
                    "contentRatings": [
                      {
                        "scheme": "US-TV",
                        "rating": "TV-PG"
                      }
                    ],
                    "waysToWatch": [
                      {
                        "identifiers": {
                          "assetId": "557",
                          "entityId": "112",
                          "seriesId": "98765"
                        },
                        "entitled": true,
                        "offeringType": "free",
                        "videoQuality": ["SD"],
                        "audioProfile": ["stereo"],
                        "audioLanguages": ["en"],
                        "closedCaptions": ["en"]
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "purchasedContent",
      "tags": [
        {
          "name": "polymorphic-pull"
        },
        {
          "name": "capabilities",
          "x-provides": "xrn:firebolt:capability:discovery:purchased-content"
        }
      ],
      "summary": "Provide a list of purchased content for the authenticated account, such as rentals and electronic sell through purchases.",
      "params": [
        {
          "name": "correlationId",
          "required": true,
          "schema": {
            "type": [ "string", "null" ]
          }
        },
        {
          "name": "result",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PurchasedContentResult"
          },
          "summary": "The data for the purachasedContent"
        }
      ],
      "result": {
        "name": "success",
        "summary": "True if the push operation is successful",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Inform the platform of the user's purchased content",
          "params": [
            {
              "name": "correlationId",
              "value": null
            },
            {
              "name": "result",
              "value": {
                "totalCount": 10,
                "expires": "2025-01-01T00:00:00.000Z",
                "entries": [
                  {
                    "identifiers": {
                      "entityId": "345"
                    },
                    "entityType": "program",
                    "programType": "movie",
                    "title": "Cool Runnings",
                    "synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
                    "releaseDate": "1993-01-01T00:00:00.000Z",
                    "contentRatings": [
                      {
                        "scheme": "US-Movie",
                        "rating": "PG"
                      },
                      {
                        "scheme": "CA-Movie",
                        "rating": "G"
                      }
                    ],
                    "waysToWatch": [
                      {
                        "identifiers": {
                          "assetId": "123"
                        },
                        "expires": "2025-01-01T00:00:00.000Z",
                        "entitled": true,
                        "entitledExpires": "2025-01-01T00:00:00.000Z",
                        "offeringType": "buy",
                        "price": 2.99,
                        "videoQuality": ["UHD"],
                        "audioProfile": ["dolbyAtmos"],
                        "audioLanguages": ["en"],
                        "closedCaptions": ["en"],
                        "subtitles": ["es"],
                        "audioDescriptions": ["en"]
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ],
      "description": "Return content purchased by the user, such as rentals and electronic sell through purchases.\n\nThe app should return the user's 100 most recent purchases in `entries`. The total count of purchases must be provided in `count`. If `count` is greater than the total number of `entries`, the UI may provide a link into the app to see the complete purchase list.\n\nThe `EntityInfo` object returned is not required to have `waysToWatch` populated, but it is recommended that it do so in case the UI wants to surface additional information on the purchases screen.\n\nThe app should implement both Push and Pull methods for `purchasedContent`.\n\nThe app should actively push `purchasedContent` when:\n\n*  The app becomes Active.\n*  When the state of the purchasedContent set has changed.\n*  The app goes into Inactive or Background state, if there is a chance a change event has been missed."
    },
    {
      "name": "watched",
      "summary": "Notify the platform that content was partially or completely watched",
      "tags": [
        {
          "name": "polymorphic-reducer"
        },
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:watched"
          ]
        }
      ],
      "params": [
        {
          "name": "entityId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "summary": "The entity Id of the watched content."
        },
        {
          "name": "progress",
          "summary": "How much of the content has been watched (percentage as 0-1 for VOD, number of seconds for live)",
          "schema": {
            "type": "number",
            "minimum": 0
          }
        },
        {
          "name": "completed",
          "summary": "Whether or not this viewing is considered \"complete,\" per the app's definition thereof",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "watchedOn",
          "summary": "Date/Time the content was watched, ISO 8601 Date/Time",
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }
      ],
      "result": {
        "name": "success",
        "summary": "whether the call was successful or not",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Notifying the platform of watched content",
          "params": [
            {
              "name": "entityId",
              "value": "partner.com/entity/123"
            },
            {
              "name": "progress",
              "value": 0.95
            },
            {
              "name": "completed",
              "value": true
            },
            {
              "name": "watchedOn",
              "value": "2021-04-23T18:25:43.511Z"
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "watchNext",
      "summary": "Suggest a call-to-action for this app on the platform home screen",
      "tags": [
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:watch-next"
          ]
        }
      ],
      "params": [
        {
          "name": "title",
          "summary": "The title of this call to action",
          "schema": {
            "$ref": "https://meta.comcast.com/firebolt/types#/definitions/LocalizedString"
          }
        },
        {
          "name": "identifiers",
          "summary": "A set of content identifiers for this call to action",
          "schema": {
            "$ref": "#/components/schemas/ContentIdentifiers"
          }
        },
        {
          "name": "expires",
          "summary": "When this call to action should no longer be presented to users",
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        },
        {
          "name": "images",
          "summary": "A set of images for this call to action",
          "schema": {
            "type": "object",
            "patternProperties": {
              "^.*$": {
                "$ref": "https://meta.comcast.com/firebolt/types#/definitions/LocalizedString"
              }
            }
          }
        }
      ],
      "result": {
        "name": "success",
        "summary": "whether the call was successful or not",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Suggest a watch-next tile for the home screen",
          "params": [
            {
              "name": "title",
              "value": "A Cool Show"
            },
            {
              "name": "identifiers",
              "value": {
                "entityId": "partner.com/entity/123"
              }
            },
            {
              "name": "expires",
              "value": "2021-04-23T18:25:43.511Z"
            },
            {
              "name": "images",
              "value": {
                "3x4": {
                  "en-US": "https://i.ytimg.com/vi/4r7wHMg5Yjg/maxresdefault.jpg",
                  "es": "https://i.ytimg.com/vi/4r7wHMg5Yjg/maxresdefault.jpg"
                },
                "16x9": {
                  "en": "https://i.ytimg.com/vi/4r7wHMg5Yjg/maxresdefault.jpg"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "entitlements",
      "tags": [
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:entitlements"
          ]
        }
      ],
      "summary": "Inform the platform of the users latest entitlements w/in this app",
      "params": [
        {
          "name": "entitlements",
          "summary": "Array of entitlement objects",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/Entitlement"
            }
          },
          "required": true
        }
      ],
      "result": {
        "name": "success",
        "summary": "whether the call was successful or not",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Update user's entitlements",
          "params": [
            {
              "name": "entitlements",
              "value": [
                {
                  "entitlementId": "partner.com/entitlement/123",
                  "startTime": "2021-04-23T18:25:43.511Z",
                  "endTime": "2021-04-23T18:25:43.511Z"
                },
                {
                  "entitlementId": "partner.com/entitlement/456",
                  "startTime": "2021-04-23T18:25:43.511Z",
                  "endTime": "2021-04-23T18:25:43.511Z"
                }
              ]
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "availabilities",
      "summary": "Inform the platform of the users latest availabilities w/in this app's catalog",
      "tags": [
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:availabilities"
          ]
        }        
      ],
      "params": [
        {
          "name": "availabilities",
          "summary": "Array of availability objects",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Availability"
            }
          },
          "required": true
        }
      ],
      "result": {
        "name": "result",
        "schema": {
          "const": null
        }
      },
      "examples": [
        {
          "name": "Update user's availabilities",
          "params": [
            {
              "name": "availabilities",
              "value": [
                {
                  "type": "channel-lineup",
                  "id": "partner.com/availability/123",
                  "startTime": "2021-04-23T18:25:43.511Z",
                  "endTime": "2021-04-23T18:25:43.511Z"
                },
                {
                  "type": "channel-lineup",
                  "id": "partner.com/availability/456",
                  "startTime": "2021-04-23T18:25:43.511Z",
                  "endTime": "2021-04-23T18:25:43.511Z"
                }
              ]
            }
          ],
          "result": {
            "name": "result",
            "value": null
          }
        }
      ]
    },        
    {
      "name": "launch",
      "tags": [
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:lifecycle:launch"
          ]
        }
      ],
      "summary": "Launch or foreground the specified app, and optionally instructs it to navigate to the specified user action",
      "params": [
        {
          "name": "appId",
          "required": true,
          "summary": "The durable app Id of the app to launch",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "intent",
          "required": false,
          "summary": "An optional `NavigationIntent` with details about what part of the app to show first, and context around how/why it was launched",
          "schema": {
            "$ref": "https://meta.comcast.com/firebolt/intents#/definitions/NavigationIntent"
          }
        }
      ],
      "result": {
        "name": "success",
        "summary": "whether the call was successful or not",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Launch the 'Foo' app to it's home screen.",
          "params": [
            {
              "name": "appId",
              "value": "foo"
            },
            {
              "name": "intent",
              "value": {
                "action": "home",
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the 'Foo' app to it's own page for a specific entity.",
          "params": [
            {
              "name": "appId",
              "value": "foo"
            },
            {
              "name": "intent",
              "value": {
                "action": "entity",
                "data": {
                  "entityType": "program",
                  "programType": "movie",
                  "entityId": "example-movie-id"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the 'Foo' app to a fullscreen playback experience for a specific entity.",
          "params": [
            {
              "name": "appId",
              "value": "foo"
            },
            {
              "name": "intent",
              "value": {
                "action": "playback",
                "data": {
                  "entityType": "program",
                  "programType": "movie",
                  "entityId": "example-movie-id"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to a global page for a specific entity.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "entity",
                "data": {
                  "entityType": "program",
                  "programType": "movie",
                  "entityId": "example-movie-id"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to a global page for the company / partner with the ID 'foo'.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "section",
                "data": {
                  "sectionName": "company:foo"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to it's home screen, as if the Home remote button was pressed.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "home",
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to it's search screen.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "search",
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to it's settings screen.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "section",
                "data": {
                  "sectionName": "settings"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to it's linear/epg guide.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "section",
                "data": {
                  "sectionName": "guide"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Launch the Aggregated Experience to the App Store details page for a specfic app with the ID 'foo'.",
          "params": [
            {
              "name": "appId",
              "value": "urn:firebolt:apps:main"
            },
            {
              "name": "intent",
              "value": {
                "action": "section",
                "data": {
                  "sectionName": "app:foo"
                },
                "context": {
                  "source": "voice"
                }
              }
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "onNavigateTo",
      "tags": [
        {
          "name": "event"
        },
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:navigate-to"
          ]
        }
      ],
      "summary": "listen to `navigateTo` events",
      "params": [],
      "result": {
        "name": "value",
        "summary": "An object describing where in the app the user intends to navigate to",
        "schema": {
          "$ref": "https://meta.comcast.com/firebolt/intents#/definitions/NavigationIntent"
        }
      },
      "examples": [
        {
          "name": "Listening for `navigateTo` events",
          "params": [],
          "result": {
            "name": "event",
            "value": {
              "action": "search",
              "data": {
                "query": "a cool show"
              },
              "context": {
                "campaign": "unknown",
                "source": "voice"
              }
            }
          }
        }
      ]
    },
    {
      "name": "signIn",
      "tags": [
        {
          "name": "calls-metrics"
        },
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:sign-in-status"
          ]
        }
      ],
      "summary": "Inform the platform that your user is signed in, for increased visiblity in search & discovery.",
      "params": [
        {
          "name": "entitlements",
          "summary": "Optional array of Entitlements, in case of a different user account, or a long time since last sign-in.",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/Entitlement"
            }
          },
          "required": false
        }
      ],
      "result": {
        "name": "success",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Send signIn metric",
          "params": [],
          "result": {
            "name": "success",
            "value": true
          }
        },
        {
          "name": "Send signIn notification with entitlements",
          "params": [
            {
              "name": "entitlements",
              "value": [
                {
                  "entitlementId": "123",
                  "startTime": "2025-01-01T00:00:00.000Z",
                  "endTime": "2025-01-01T00:00:00.000Z"
                }
              ]
            }
          ],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    },
    {
      "name": "signOut",
      "tags": [
        {
          "name": "calls-metrics"
        },
        {
          "name": "capabilities",
          "x-uses": [
            "xrn:firebolt:capability:discovery:sign-in-status"
          ]
        }
      ],
      "summary": "Inform the platform that your user has signed out and that entitlements may no longer be valid.",
      "params": [],
      "result": {
        "name": "success",
        "schema": {
          "type": "boolean"
        }
      },
      "examples": [
        {
          "name": "Send signOut notification",
          "params": [],
          "result": {
            "name": "success",
            "value": true
          }
        }
      ]
    }
  ],
  "components": {
    "schemas": {
      "DiscoveryPolicy": {
        "title": "DiscoveryPolicy",
        "type": "object",
        "required": [
          "enableRecommendations",
          "shareWatchHistory",
          "rememberWatchedPrograms"
        ],
        "properties": {
          "enableRecommendations": {
            "type": "boolean",
            "description": "Whether or not to the user has enabled history-based recommendations"
          },
          "shareWatchHistory": {
            "type": "boolean",
            "description": "Whether or not the user has enabled app watch history data to be shared with the platform"
          },
          "rememberWatchedPrograms": {
            "type": "boolean",
            "description": "Whether or not the user has enabled watch history"
          }
        }
      },
      "EntityInfo": {
        "title": "EntityInfo",
        "description": {
          "$ref": "file:../descriptions/modules/discovery/EntityInfo.md"
        },
        "type": "object",
        "required": ["identifiers", "entityType", "programType", "title"],
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/ContentIdentifiers"
          },
          "title": {
            "type": "string",
            "description": "Title of the entity."
          },
          "entityType": {
            "const": "program",
            "description": "The type of the entity. If `program`, then `programType` must be provided."
          },
          "programType": {
            "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/ProgramType"
          },
          "synopsis": {
            "type": "string",
            "description": "Short description of the entity."
          },
          "seasonNumber": {
            "type": "number",
            "description": "For TV seasons, the season number. For TV episodes, the season that the episode belongs to."
          },
          "episodeNumber": {
            "type": "number",
            "description": "For TV episodes, the episode number."
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the program or entity was released or first aired."
          },
          "contentRatings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentRating"
            },
            "description": "A list of ContentRating objects, describing the entity's ratings in various rating schemes."
          },
          "waysToWatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WayToWatch"
            },
            "description": "An array of ways a user is might watch this entity, regardless of entitlements."
          }
        }
      },
      "WayToWatch": {
        "title": "WayToWatch",
        "type": "object",
        "required": ["identifiers"],
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/ContentIdentifiers"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the WayToWatch is no longer available."
          },
          "entitled": {
            "type": "boolean",
            "description": "Specify if the user is entitled to watch the entity."
          },
          "entitledExpires": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the entity is no longer entitled."
          },
          "offeringType": {
            "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/OfferingType"
          },
          "hasAds": {
            "type": "boolean",
            "description": "True if the streamable asset contains ads."
          },
          "price": {
            "type": "number",
            "description": "For \"buy\" and \"rent\" WayToWatch, the price to buy or rent in the user's preferred currency."
          },
          "videoQuality": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["SD", "HD", "UHD"]
            },
            "description": "List of the video qualities available via the WayToWatch."
          },
          "audioProfile": {
            "type": "array",
            "items": {
              "$ref": "https://meta.comcast.com/firebolt/types#/definitions/AudioProfile"
            },
            "description": "List of the audio types available via the WayToWatch."
          },
          "audioLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audio track languages available on the WayToWatch. The first is considered the primary language. Languages are expressed as ISO 639 1/2 codes."
          },
          "closedCaptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of languages for which closed captions are available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
          },
          "subtitles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of languages for which subtitles are available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
          },
          "audioDescriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of languages for which audio descriptions (DVS) are available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
          }
        },
        "description": "A WayToWatch describes a way to watch a video program. It may describe a single\nstreamable asset or a set of streamable assets. For example, an app provider may\ndescribe HD, SD, and UHD assets as individual WayToWatch objects or rolled into\na single WayToWatch.\n\nIf the WayToWatch represents a single streamable asset, the provided\nContentIdentifiers must be sufficient to play back the specific asset when sent\nvia a playback intent or deep link. If the WayToWatch represents multiple\nstreamable assets, the provided ContentIdentifiers must be sufficient to\nplayback one of the assets represented with no user action. In this scenario,\nthe app SHOULD choose the best asset for the user based on their device and\nsettings. The ContentIdentifiers MUST also be sufficient for navigating the user\nto the appropriate entity or detail screen via an entity intent.\n\nThe app should set the `entitled` property to indicate if the user can watch, or\nnot watch, the asset without making a purchase. If the entitlement is known to\nexpire at a certain time (e.g., a rental), the app should also provide the\n`entitledExpires` property. If the entitlement is not expired, the UI will use\nthe `entitled` property to display watchable assets to the user, adjust how\nassets are presented to the user, and how intents into the app are generated.\nFor example, the Aggregated Experience could render a \"Watch\" button for an\nentitled asset versus a \"Subscribe\" button for an non-entitled asset.\n\nThe app should set the `offeringType` to define how the content may be\nauthorized. The UI will use this to adjust how content is presented to the user.\n\nA single WayToWatch cannot represent streamable assets available via multiple\npurchase paths. If, for example, an asset has both Buy, Rent and Subscription\navailability, the three different entitlement paths MUST be represented as\nmultiple WayToWatch objects.\n\n`price` should be populated for WayToWatch objects with `buy` or `rent`\n`offeringType`. If the WayToWatch represents a set of assets with various price\npoints, the `price` provided must be the lowest available price."
      },
      "ContentRating": {
        "title": "ContentRating",
        "type": "object",
        "required": ["scheme", "rating"],
        "properties": {
          "scheme": {
            "type": "string",
            "enum": [
              "CA-Movie",
              "CA-TV",
              "CA-Movie-Fr",
              "CA-TV-Fr",
              "US-Movie",
              "US-TV"
            ],
            "description": "The rating scheme."
          },
          "rating": {
            "type": "string",
            "description": "The content rating."
          },
          "advisories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of subratings or content advisories."
          }
        },
        "description": "A ContentRating represents an age or content based of an entity. Supported rating schemes and associated types are below.\n\n## United States\n\n`US-Movie` (MPAA):\n\nRatings: `NR`, `G`, `PG`, `PG13`, `R`, `NC17`\n\nAdvisories: `AT`, `BN`, `SL`, `SS`, `N`, `V`\n\n`US-TV` (Vchip):\n\nRatings: `TVY`, `TVY7`, `TVG`, `TVPG`, `TV14`, `TVMA`\n\nAdvisories: `FV`, `D`, `L`, `S`, `V`\n\n## Canada\n\n`CA-Movie` (OFRB):\n\nRatings: `G`, `PG`, `14A`, `18A`, `R`, `E`\n\n`CA-TV` (AGVOT)\n\nRatings: `E`, `C`, `C8`, `G`, `PG`, `14+`, `18+`\n\nAdvisories: `C`, `C8`, `G`, `PG`, `14+`, `18+`\n\n`CA-Movie-Fr` (Canadian French language movies):\n\nRatings: `G`, `8+`, `13+`, `16+`, `18+`\n\n`CA-TV-Fr` (Canadian French language TV):\n\nRatings: `G`, `8+`, `13+`, `16+`, `18+`\n"
      },
      "ContentIdentifiers": {
        "title": "ContentIdentifiers",
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "Identifies a particular playable asset. For example, the HD version of a particular movie separate from the UHD version."
          },
          "entityId": {
            "type": "string",
            "description": "Identifies an entity, such as a Movie, TV Series or TV Episode."
          },
          "seasonId": {
            "type": "string",
            "description": "The TV Season for a TV Episode."
          },
          "seriesId": {
            "type": "string",
            "description": "The TV Series for a TV Episode or TV Season."
          },
          "appContentData": {
            "type": "string",
            "description": "App-specific content identifiers.",
            "maxLength": 1024
          }
        },
        "description": "The ContentIdentifiers object is how the app identifies an entity or asset to\nthe Firebolt platform. These ids are used to look up metadata and deep link into\nthe app.\n\nApps do not need to provide all ids. They only need to provide the minimum\nrequired to target a playable stream or an entity detail screen via a deep link.\nIf an id isn't needed to get to those pages, it doesn't need to be included."
      },
      "FederatedRequest": {
        "title": "FederatedRequest",
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          }
        },
        "required": ["correlationId"],
        "propertyNames": {
          "enum": ["correlationId", "parameters"]
        },
        "examples": [
          {
            "correlationId": "xyz"
          }
        ]
      },
      "FederatedResponse": {
        "title": "FederatedResponse",
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          }
        },
        "required": ["correlationId", "result"],
        "propertyNames": {
          "enum": ["correlationId", "result"]
        },
        "examples": [
          {
            "correlationId": "xyz"
          }
        ]
      },
      "EntityInfoFederatedRequest": {
        "title": "EntityInfoFederatedRequest",
        "allOf": [
          {
            "$ref": "#/components/schemas/FederatedRequest"
          },
          {
            "type": "object",
            "properties": {
              "parameters": {
                "$ref": "#/components/schemas/EntityInfoParameters"
              }
            },
            "required": ["correlationId", "parameters"]
          }
        ],
        "examples": [
          {
            "correlationId": "xyz",
            "parameters": {
              "entityId": "345"
            }
          }
        ]
      },
      "EntityInfoParameters": {
        "title": "EntityInfoParameters",
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          }
        },
        "required": ["entityId"],
        "additionalProperties": false,
        "examples": [
          {
            "entityId": "345"
          }
        ]
      },
      "EntityInfoFederatedResponse": {
        "title": "EntityInfoFederatedResponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/FederatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "$ref": "#/components/schemas/EntityInfoResult"
              }
            }
          }
        ]
      },
      "EntityInfoResult": {
        "title": "EntityInfoResult",
        "description": "The result for an `entityInfo()` push or pull.",
        "type": "object",
        "properties": {
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "entity": {
            "$ref": "#/components/schemas/EntityInfo"
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityInfo"
            }
          }
        },
        "required": ["expires", "entity"],
        "additionalProperties": false
      },
      "PurchasedContentFederatedRequest": {
        "title": "PurchasedContentFederatedRequest",
        "allOf": [
          {
            "$ref": "#/components/schemas/FederatedRequest"
          },
          {
            "type": "object",
            "properties": {
              "parameters": {
                "$ref": "#/components/schemas/PurchasedContentParameters"
              }
            },
            "required": ["correlationId", "parameters"]
          }
        ],
        "examples": [
          {
            "correlationId": "xyz",
            "parameters": {
              "limit": 100
            }
          }
        ]
      },
      "PurchasedContentParameters": {
        "title": "PurchasedContentParameters",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": -1
          },
          "offeringType": {
            "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/OfferingType"
          },
          "programType": {
            "$ref": "https://meta.comcast.com/firebolt/entertainment#/definitions/ProgramType"
          }
        },
        "required": ["limit"],
        "additionalProperties": false,
        "examples": [
          {
            "limit": 100
          }
        ]
      },
      "PurchasedContentFederatedResponse": {
        "title": "PurchasedContentFederatedResponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/FederatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "$ref": "#/components/schemas/PurchasedContentResult"
              }
            }
          }
        ]
      },
      "PurchasedContentResult": {
        "title": "PurchasedContentResult",
        "type": "object",
        "properties": {
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "totalCount": {
            "type": "integer",
            "minimum": 0
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityInfo"
            }
          }
        },
        "required": ["expires", "totalCount", "entries"],
        "additionalProperties": false
      },
      "Availability": {
        "title": "Availability",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "channel-lineup",
              "program-lineup"
            ]
          },
          "id": {
            "type": "string"
          },
          "catalogId": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type", "id"
        ]
      },
      "TuneChannels": {
        "title": "TuneChannels",
        "description": "An enumeration of xrn values for the TuneIntent that have special meaning.",
        "type": "string",
        "enum": [
          "xrn:firebolt:channel:any"
        ]
      }  
    }
  }
}
