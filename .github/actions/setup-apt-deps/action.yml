name: 'Setup apt Dependencies'
description: 'Sets up the apt dependencies and caches them.'
runs:
  using: "composite"
  steps:
    - name: Prepare local apt cache directory
      shell: bash
      run: |
        mkdir -p "${{ runner.temp }}/apt-cache"

    - name: Cache apt packages (restore to temp)
      id: cache-apt
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/apt-cache
        key: ${{ runner.os }}-apt-cache-${{ hashFiles('.github/actions/setup-apt-deps/action.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-cache-

    - name: Move cached packages into apt archives (if any)
      shell: bash
      run: |
        if [ -d "${{ runner.temp }}/apt-cache" ] && [ "$(ls -A "${{ runner.temp }}/apt-cache")" ]; then
          echo "Copying cached apt packages into /var/cache/apt/archives"
          sudo mkdir -p /var/cache/apt/archives
          sudo cp -a "${{ runner.temp }}/apt-cache/." /var/cache/apt/archives/
        else
          echo "No cached apt packages to copy"
        fi

    - name: Install apt dependencies
      shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends \
          libboost-all-dev \
          cmake \
          jq

    - name: Save newly-downloaded apt packages into runner temp for cache
      shell: bash
      run: |
        mkdir -p "${{ runner.temp }}/apt-cache"
        sudo cp -a /var/cache/apt/archives/. "${{ runner.temp }}/apt-cache/"
        sudo chmod -R a+rw "${{ runner.temp }}/apt-cache"
