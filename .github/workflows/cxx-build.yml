name: CXX build
on:
  repository_dispatch:
    types: [trigger-workflow]
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
      - 'next'
    types:
      - opened
      - synchronize

defaults:
  run:
    shell: bash

env:
  HUSKY: 0

jobs:
  dependencies:
    name: Build Dependencies
    runs-on: ubuntu-latest
    container:
      image: node:23.3.0
    steps:
      - name: Checkout firebolt-apis
        uses: actions/checkout@v2

      - name: Clone and Install Thunder
        env:
          GIT_REPOS_VERSIONS: ${{ vars.GIT_REPOS_VERSIONS }}
        run: |
          apt update
          apt install -y cmake ninja-build python3-pip python3.11-venv
          python3 -m venv firebolt-env
          source firebolt-env/bin/activate
          pip install jsonref
          .github/workflows/utils.sh cloneAndInstallThunder

      - name: Clone and Install Dependencies
        env:
          GIT_REPOS_VERSIONS: ${{ vars.GIT_REPOS_VERSIONS }}
        run: |
          .github/workflows/utils.sh cloneAndInstallDeps

      - name: Clone and Install Transport
        env:
          GIT_REPOS_VERSIONS: ${{ vars.GIT_REPOS_VERSIONS }}
        run: |
          .github/workflows/utils.sh cloneAndInstallTransport

      - name: Upload the library artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependencies
          path: /__w/firebolt-apis/install/

  core_native_lib:
    name: Build Core Native Library
    needs: [dependencies]
    runs-on: ubuntu-latest
    container:
      image: node:23.3.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies
          path: /__w/firebolt-apis/install/

      - name: Install npm & apt dependencies
        run: |
          apt update
          apt install -y cmake
          npm install

      - name: Build Core Native Lib
        env:
          THROW_ERROR_ON_UT_FAIL: ${{ vars.THROW_ERROR_ON_UT_FAIL }}
        run: |
          git config --global --add safe.directory /__w/firebolt-apis/firebolt-apis
          .github/workflows/utils.sh buildRuntimeCoreSDK

      - name: Deploy Core Native Sources
        if: ${{ env.DEPLOY_ARTIFACTS == 'true' }}
        env:
          NPM_TOKEN: ${{ secrets.SEMANTIC_RELEASE_NPM_TOKEN  }}
        run: |
          echo "user=${{ secrets.CPP_ARTIFACT_USER }}"
          curl -v -u ${{ secrets.CPP_ARTIFACT_USER }}:${{ secrets.CPP_ARTIFACT_SECRET }} -T firebolt-apis--core-sdk-$RELEASE_VERSION.tgz "${{ vars.DEPLOY_URL }}"

