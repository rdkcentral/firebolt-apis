title Firebolt Extension on Ripple for Certification

participant DeveloperTools #lightpink
note over DeveloperTools: e.g. FCS

participantgroup #lightgreen **Ripple**

participant Communication
note over Communication: e.g. \nBolt-Linchpin \nWebsocket

participant FireboltExtn
participant Core
participant Rules Engine
end

participantgroup #lightblue **Thunder**
participant Thunder Plugin
end

participantgroup #lightyellow **Gateway**
participant App Service
end

note over Rules Engine: e.g. \nSystem, Applications

note over Thunder Plugin: e.g. \nWindow Manager


group communication subscription
DeveloperTools -> Communication: Establish communication
note over DeveloperTools, Communication: subscribe linchpin or \nwebsocket connection

Communication -> DeveloperTools: acknowledgement
Communication -> FireboltExtn: {"jsonrpc":"2.0","method":"onFireboltInterections", \n"params":{"listen":true},"id":1}
FireboltExtn -> Communication: {"jsonrpc":"2.0", "id":1,"result":{"listening":true,\n"event":"onFireboltInterections"}}
end

group Firebolt Interactions 
FireboltExtn -> Core: request forward
Core -> FireboltExtn: Interactions 
FireboltExtn -> Communication: {id:0, "jsonrpc": "2.0", result: {interactions}}
Communication -> DeveloperTools: {id:0, "jsonrpc": "2.0", result: {interactions}}
end

group Thunder call for Command and Control
DeveloperTools -> Communication: Instructions to execute thunder call \nfor command and control
Communication -> FireboltExtn: {"jsonrpc": "2.0", "method": "commandAndControl", \n"params": [<intent>], "id": "1"}
FireboltExtn -> Rules Engine: request forward
Rules Engine -> Thunder Plugin: Request fullfil and respond back

note over Rules Engine, Thunder Plugin: Request goes to \nWindowManager or \nrelated plugin

Thunder Plugin -> Rules Engine: response forward
Rules Engine -> FireboltExtn: {id:0, "jsonrpc": "2.0", result: "true"}
FireboltExtn -> Communication: {id:0, "jsonrpc": "2.0", result: "true"}
Communication -> DeveloperTools : {id:0, "jsonrpc": "2.0", result: "true"}
end

group Thunder call for Screen Capture
DeveloperTools -> Communication: Instructions to execute thunder call \nfor Screen Capture
Communication -> FireboltExtn: {"jsonrpc": "2.0", "method": "screenCapture", \n"params": [<uploadPath>], "id": "1"}
FireboltExtn -> Rules Engine: request forward
Rules Engine -> Thunder Plugin: Request fullfil and respond back

note over Rules Engine, Thunder Plugin: Request goes to \nScreenCapture or \nrelated plugin

Thunder Plugin -> Rules Engine: response forward
Rules Engine -> FireboltExtn: {id:0, "jsonrpc": "2.0", result: "true"}
FireboltExtn -> Communication: {id:0, "jsonrpc": "2.0", result: "true"}
Communication -> DeveloperTools : {id:0, "jsonrpc": "2.0", result: "true"}
end

group Health Check
DeveloperTools -> Communication: Instructions to get platform \nhealth check snapshot
Communication -> FireboltExtn: {"jsonrpc": "2.0", "method": "healthCheck","id": "1"}
FireboltExtn -> Core: request forward

note over FireboltExtn: Healthcheck snapshot includes \nRipple process memory, load \nlive connections, etc.


Core -> FireboltExtn: {id:0, "jsonrpc": "2.0", result: {healthCheckData}
FireboltExtn -> Communication: {id:0, "jsonrpc": "2.0", result: {healthCheckData}
Communication -> DeveloperTools : {id:0, "jsonrpc": "2.0", result: {healthCheckData}}
end

group App performance snapshot
DeveloperTools -> FireboltExtn: {"jsonrpc": "2.0", "method": "appPerformance",\n"params":<appId>, "id": "1"}

note over FireboltExtn: App performance snapshot \nincludes memory usage, load etc.

FireboltExtn -> Thunder Plugin: Request fullfil
Thunder Plugin -> App Service: Request fullfil
App Service -> Thunder Plugin: {id:0, "jsonrpc": "2.0", \nresult: {appPerformanceData}}
Thunder Plugin -> Rules Engine: {id:0, "jsonrpc": "2.0", \nresult: {appPerformanceData}}
Rules Engine -> FireboltExtn: {id:0, "jsonrpc": "2.0", \nresult: {appPerformanceData}}
FireboltExtn -> DeveloperTools: {id:0, "jsonrpc": "2.0", \nresult: {appPerformanceData}}

end